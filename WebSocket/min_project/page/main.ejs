<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
      /*  */
      .line {
        overflow: hidden;
      }
      .seat {
        margin: 5px;
        float: left;
        width: 30px;
        height: 30px;
        border-radius: 3px;
      }
      .enable {
        background-color: gray;
      }
      .disable {
        background-color: aqua;
      }
    </style>
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <div>airplane</div>
    <select name="" id="selectBtn">
      <option value="0">airplane 1</option>
      <option value="1">airplane 2</option>
      <option value="2">airplane 3</option>
    </select>
    <div id="content"></div>
  </body>
  <script>
    window.onload = () => {
      // connect 메소드를 사용하여 연결
      // io는 /socket.io/socket.io.js"에서 가져온 전역객체
      const socket = io.connect();
      // on 메소드 : 특정 이벤트가 발생했을때 실행할 콜백 함수를 등록
      socket.on("reserve", (data) => {
        if (data.selectCount == selectBtn.selectedIndex) {
          let target = document.querySelector(
            `div[data-x="${data.x}"][data-y="${data.y}"]`
          );
          target.classList.remove("enable");
          target.classList.add("disable");
        }
      });

      let selectCount = 0;
      selectBtn.onchange = function () {
        content.innerHTML = "";
        // selectedIndex : select tag의 옵션의 인덱스 번호 호출
        selectCount = this.selectedIndex;
        // 시트 생성 함수
        getseats(selectCount);
      };

      const onClickSeat = function () {
        // 예약이 된 좌석이면 리턴시킴
        if (this.classList.contains("disable")) {
          return;
        }
        // 어트리뷰트 데이터 속성을 호출 getAttribute 메소드로 매개변수로 가져올 속성이름
        let x = this.getAttribute("data-x");
        let y = this.getAttribute("data-y");
        if (confirm("좌석을 예약하시겠습니까?")) {
          // socket 이벤트를 푸쉬
          socket.emit("reserve", {
            x,
            y,
            selectCount,
          });
        } else {
          alert("노노요");
        }
      };

      function getseats(selectIndex) {
        // 요청 응답으로 시트를 가져올 예정
        // 변수로 담을 예정
        // CDN으로 axios 활용
        // 요청은 get방식 매개변수는 아이디 값으로 요청
        // /seats/0 으로 get 요청을 보냄
        axios.get("/seats/" + selectIndex).then((e) => {
          console.log(e);
          let { data } = e;
          // data의 길이는 4 닌까 4줄 출력
          data.forEach((line, indexY) => {
            let lineElem = document.createElement("div");
            lineElem.classList.add("line");

            line.forEach((seat, indexX) => {
              let seatElem = document.createElement("div");
              seatElem.classList.add("seat");
              // setAttribute : 어트리뷰트 속성 추가
              // 첫번째 매개변수 : 속성의 이름
              // 두번째 매개변수 : 속성의 값
              seatElem.setAttribute("data-x", indexX);
              seatElem.setAttribute("data-y", indexY);

              // 빈공간, 예약 가능한 시트, 이미 예약된 시트
              if (seat == 1) {
                seatElem.classList.add("enable");
                seatElem.addEventListener("click", onClickSeat);
              } else if (seat == 2) {
                seatElem.classList.add("disable");
              }
              lineElem.appendChild(seatElem);
            });
            content.appendChild(lineElem);
          });
        });
      }
      getseats(0);
    };
  </script>
</html>
